library(vegan)
install.packages("vegan")
phyla_level <- read.table("MS2_L2_HH.txt", header = TRUE, row.names=NULL, sep="\t")
phyla_level <- read.table("MS2_L2_HH.txt", header = TRUE, row.names=NULL, sep="\t")
x <- 1:6
mat <- matrix(x, 3, 2)
c(1,2,3)
array(x, c(1,2,3))
B <- array(x, c(1,2,3))
dim(B) <- c(2, 3)
A-t(B)
mat-t(B)
df <- data.frame(number = 7:2, names = c("years","temperature"))
df
df <- data.frame(years = seq(2,20,3), temperature = c(rep(c(30,33),3),32))
df
l <- list(Initials = letters[23:17])
l
cbind(df, as.data.frame(l))
list(1:10,11:20)
l <- list(1:10,11:20)
df
sapply(df,)
View(df)
phyla_level <- read.table("MS2_L2_HH.txt", header = TRUE, row.names=NULL, sep="\t")
View(phyla_level)
View(phyla_level)
write.csv(phyla_level, file = "dani.csv")
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
phyla_level$OTU.ID <- NULL
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
phyla_level$OTU.ID <- NULL
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
df
df <- data.frame(c("s","d","v"))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
colnames(phyla_level)
bacteria <- colnames(phyla_level)
bacteria_names <- colnames(phyla_level)
res <- combn(bacteria_names , 2)
res
res[1,]
res[1,]
res[,1]
res <- combn(bacteria_names , 2, simplify = TRUE)
res[,1]
res[,1][1]
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
bacteria_names
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
combined_bacteria
bacteria1 <- each_pair[,1][1]
each_pair <- combined_bacteria[,1]
each_pair
bacteria1 <- each_pair[1]
bacteria1
bacteria2 <- each_pair[2]
bacteria2
phyla_level[bacteria1]
sum(phyla_level[bacteria1],phyla_level[bacteria2])
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,c(bacteria1,bacteria2,sum_value))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,c(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
df
bacteria_names <- colnames(phyla_level)
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,c(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
sum_value
df <- rbind(df,c(bacteria1,bacteria2,sum_value))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
df
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
View(phyla_level)
View(phyla_level)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
debugSource('~/script_dani2.R', echo=TRUE)
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
print("hello")
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
each_pair <- combined_bacteria[,1]
for (each_pair in combined_bacteria){
print("hello")
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
print("hello")
bacteria_names <- colnames(phyla_level)
print("hello")
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
print("hello")
for (each_pair in combined_bacteria){
print("hello")
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
print(bacteria1)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
print("hello")
bacteria_names <- colnames(phyla_level)
print("hello")
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
print("hello")
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
print(bacteria1)
bacteria2 <- each_pair[2]
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
combined_bacteria
View(combined_bacteria)
View(combined_bacteria)
?combn
t(combined_bacteria)
combined_bacteria <- t(combined_bacteria)
View(combined_bacteria)
View(combined_bacteria)
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
bacteria2 <- each_pair[2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
for (each_pair in combined_bacteria){
bacteria1 <- each_pair[1]
print(bacteria1)
bacteria2 <- each_pair[2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
print(each_pair)
for (each_pair in combined_bacteria){
print(each_pair)
bacteria1 <- each_pair[1]
print(bacteria1)
bacteria2 <- each_pair[2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
?for
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
combined_bacteria <- t(combined_bacteria)
for (i in 1:nrow(combined_bacteria)){
bacteria1 <- combined_bacteria[i,1]
print(bacteria1)
bacteria2 <- combined_bacteria[i,1]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df
View(combined_bacteria)
View(combined_bacteria)
View(combined_bacteria)
View(combined_bacteria)
df <- data.frame("s"= character(), "d" = character(), "value"=numeric())
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
combined_bacteria <- t(combined_bacteria)
for (i in 1:nrow(combined_bacteria)){
bacteria1 <- combined_bacteria[i,1]
print(bacteria1)
bacteria2 <- combined_bacteria[i,2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
df
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
bacteria_names <- colnames(phyla_level)
combined_bacteria <- combn(bacteria_names , 2, simplify = TRUE)
combined_bacteria <- t(combined_bacteria)
for (i in 1:nrow(combined_bacteria)){
bacteria1 <- combined_bacteria[i,1]
print(bacteria1)
bacteria2 <- combined_bacteria[i,2]
print(bacteria2)
sum_value <- sum(phyla_level[bacteria1],phyla_level[bacteria2])
df <- rbind(df,data.frame(bacteria1,bacteria2,sum_value))
}
write.csv(phyla_level, file = "dani.csv",row.names=FALSE)
write.csv(df, file = "dani.csv",row.names=FALSE)
write.csv(df, file = "dani.csv",row.names=FALSE, col.names = FALSE)
matrix(1:12, 3, 4)
m <- matrix(1:12, 3, 4)
df <- as.data.frame(m)
df
df[2,]
df[2,  c(2,4)]
df[2,]>4
rownames(x) <- paste0("row", 1:3)
rownames(df) <- paste0("row", 1:3)
colnames(df) <- paste0("col", 1:3)
x[,paste0("col",3:4)] <- 0
df[,paste0("col",3:4)] <- 0
# 1
# How would you create a 3 by 4 matrix that contains
# the numbers 1 to 12 and then convert it into a data frame?
m <- matrix(1:12, 3, 4)
df <- as.data.frame(m)
#use str to see the structure
str(df)
# 2
# Please use the data frame you created in the first question for the next 5 questions.
# How would you select the second row elements at second and fourth column ?
df[2,  c(2,4)]
# 3
# How would you assign zero to the elements at row 2 which are greater than 4?
df[2, df[2,]>4] <- 0
# 4
# How do you set the rownames to “row1”, “row2”, “row3” and column names to “col1”, “col2”, “col3” and “col4” ?
# (hint:use function “paste0”)
rownames(df) <- paste0("row", 1:3)
colnames(df) <- paste0("col", 1:3)
# 5
# How do you assign 0 to all elements in columns “col3” and “col4” by using paste0 function ?
df[,paste0("col",3:4)] <- 0
# 6
# How do you get the numbers whose mod 2 is 0 i) by using lapply() function ii) by subsetting the data frame directly?
debugSource('~/ola.R')
debugSource('~/ola.R')
# 1
# How would you create a 3 by 4 matrix that contains
# the numbers 1 to 12 and then convert it into a data frame?
m <- matrix(1:12, 3, 4)
df <- as.data.frame(m)
#use str to see the structure
str(df)
# 2
# Please use the data frame you created in the first question for the next 5 questions.
# How would you select the second row elements at second and fourth column ?
df[2,  c(2,4)]
# 3
# How would you assign zero to the elements at row 2 which are greater than 4?
df[2, df[2,]>4] <- 0
# 4
# How do you set the rownames to “row1”, “row2”, “row3” and column names to “col1”, “col2”, “col3” and “col4” ?
# (hint:use function “paste0”)
rownames(df) <- paste0("row", 1:3)
colnames(df) <- paste0("col", 1:3)
# 5
# How do you assign 0 to all elements in columns “col3” and “col4” by using paste0 function ?
df[,paste0("col",3:4)] <- 0
# 6
# How do you get the numbers whose mod 2 is 0 i) by using lapply() function ii) by subsetting the data frame directly?
x <- c("a"=1, "b"=2, "c"=3, "d"=4, "e"=5)
x[c(3,5)]
x
x[-1]
x[c(-1,-2,-4)]
x[c(F,F,T,F,T)]
x[c("c","e")]
vals[c(2, 5)]
vals <- outer(1:5, 1:5, FUN = “/”)
vals <- outer(1:5, 1:5, FUN = "/")
vals
vals[c(2, 5)]
vals[2, 5]
vals[c(2, 5)]
str(vals)
df <- data.frame(a=paste("Point_", 1:20), b=rep(1:4, each = 2, len = 20)
df <- data.frame(a=paste("Point_", 1:20), b=rep(1:4, each = 2, len = 20), c= seq(1,40,length.out = 20), stringsAsFactors = F)
df <- data.frame(a=paste("Point", 1:20), b=rep(1:4, each = 2, len = 20), c= seq(1,40,length.out = 20), stringsAsFactors = F)
install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ', 'devtools'))
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
install.packages("digest")
install.packages("digest")
devtools::install_github('IRkernel/IRkernel')
devtools::install_github('IRkernel/IRkernel')
install.packages("digest")
install.packages("digest")
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
setwd("~/tum-data-mining-lab")
library(wordcloud)
library(tm)
library(dplyr)
library(openxlsx)
mydf <- read.xlsx("globalterrorismdb_0616dist.xlsx", sheet = 1, startRow = 1, colNames = TRUE)
# # http://www.r-bloggers.com/sentiment-analysis-on-donald-trump-using-r-and-tableau/
######################################
#           Create word cloud
######################################
#frequencies of na (relative)
relative_na_frequencies <- function(column_to_process)
{
count_na <- sum(is.na(mydf$summary))
count_not_na <- sum(!is.na(mydf$summary))
value <- count_na/(count_na + count_not_na)
print(value)
}
generate.cloud <- function(column_to_process, output_filename)
{
#remove punctuation
column_to_process <- gsub("[[:punct:]]", "", column_to_process)
# Create corpus
corpus=Corpus(VectorSource(column_to_process))
# Convert to lower-case
corpus=tm_map(corpus,tolower)
# Remove stopwords
corpus=tm_map(corpus,function(x) removeWords(x,stopwords()))
# convert corpus to a Plain Text Document
corpus=tm_map(corpus,PlainTextDocument)
col=brewer.pal(6,"Dark2")
wordcloud(corpus, min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
}
relative_na_frequencies(mydf$summary)
generate.cloud(mydf$summary, "summary")
generate.cloud <- function(column_to_process, output_filename)
{
#remove punctuation
column_to_process <- gsub("[[:punct:]]", "", column_to_process)
# Create corpus
corpus=Corpus(VectorSource(column_to_process))
# Convert to lower-case
corpus=tm_map(corpus,tolower)
# Remove stopwords
corpus=tm_map(corpus,function(x) removeWords(x,stopwords()))
# convert corpus to a Plain Text Document
corpus=tm_map(corpus,PlainTextDocument)
col=brewer.pal(6,"Dark2")
png(paste(output_filename,"wordcloud.png"), width=1280,height=800)
wordcloud(corpus, min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
}
relative_na_frequencies(mydf$summary)
generate.cloud(mydf$summary, "summary")
relative_na_frequencies(mydf$alternative_txt)
generate.cloud(mydf$alternative_txt, "alternative_txt")
relative_na_frequencies(mydf$alternative_txt)
generate.cloud(mydf$alternative_txt, "alternative_txt")
#frequencies of na (relative)
relative_na_frequencies <- function(column_to_process)
{
count_na <- sum(is.na(column_to_process))
count_not_na <- sum(!is.na(column_to_process))
value <- count_na/(count_na + count_not_na)
print(value)
}
relative_na_frequencies(mydf$alternative_txt)
generate.cloud(mydf$alternative_txt, "alternative_txt")
relative_na_frequencies(mydf$summary)
relative_na_frequencies(mydf$alternative_txt)
relative_na_frequencies(mydf$motive)
relative_na_frequencies(mydf$weapdetail)
generate.cloud(mydf$alternative_txt, "alternative_txt")
generate.cloud(mydf$motive, "motive")
generate.cloud(mydf$weapdetail, "weapdetail")
